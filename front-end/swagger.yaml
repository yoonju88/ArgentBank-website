swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts:     
    get:  
      security : 
        - Bearer: [] 
      tags:
        - Transaction
      summary: Retrieve all transactions for the current month, grouped by account
      description: API to retrive transactions grouped by account for the current month.
      parameters :
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses :
        '200':
          description: Transaction grouped by account for the current month
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal Server Error
          
  /accounts/{accountId}:
    get: 
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: View the details of a single transaction
      description: API for fetching the detail of transaction by its accountId
      parameters :
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
      produces:
        - application/json
      responses :
        '200':
          description: Transaction detail retrieved successfully
          schema:
              $ref: '#/definitions/TransactionDetails'
        '400':
          description: Invalid request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transaction :      
    post:
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: Add a new note to a transition
      description: API for adding a new note
      parameters :
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
          
        - in: body
          name: body
          description: add the transaction payload
          required: true
          schema: 
            $ref: '#/definitions/AddTransitionNote'
      produces:
        - application/json
      responses :
        '200':
          description: New note has been successfully added
          schema:
              $ref: '#/definitions/UpdateTransitionResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error
    put:
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: Update category on a transaction
      description: API for editing category on trasaction by its ID
      parameters :
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
          
        - in: body
          name: body
          description: Update the transaction payload
          required: true
          schema:
              $ref: '#/definitions/UpdateTransition'
      produces :
        - application/json
      responses :
        '200':
          description: Transaction category updated successfully
          schema:
            $ref: '#/definitions/UpdateTransitionResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transaction/{noteId}:
    delete:
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: Delete information on a transaction
      description: API for removing information on transaction by its ID 
      parameters :
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
          
        - in: path
          name: noteId
          description: The ID of the transaction note to be deleted
          required: true
          type: string
      produces :
        - application/json
      responses :
        '200':
          description: Transaction information deleted successfully
          schema:
              $ref: '#/definitions/DeleteTransitionResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal Server Error
         
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

  TransactionResponse:
    type: object
    properties:
      accountId:
        type: string
      transactions:
        type: array
        items:
          type: object
          properties:
            transactionId:
              type: string
            date:
              type: string
              format: date
            amount:
              type: number
              format: double
            name:
              type: string
            description:
              type: string
  TransactionDetails:
    type: object
    properties:
      transactionId:
        type: string
      date:
        type: string
        format : date
      description:
        type: string
        description: transaction detail description ('Golden Sun Bakery')
      amount: 
        type: number
        format: double
        description: transaction amount in USD
      balance:
        type: number
        format: double
        description: transaction balance in USD
      type: 
        type: string
        description: transaction type
      category:
        type: string
        description: transaction category
      note:
        type: object
        description: transaction note
        properties:
          noteId:
            type: string
          content: 
            type: string

  AddTransitionNote:
    type: object
    properties:
      transitionId:
        type: string
      note:
        type: object
        properties:
          noteId:
            type: string
          content: 
            type: string
        
  UpdateTransitionResponse:
    type: object
    properties:
      status:
        type: boolean
        description: Indicates if the operation was successful.
      message:  
        type: string
        description: A message providing the detail about the result.
        example : 
      transaction:
        type: object
        properties:
          transactionId:
            type: string
          category:
            type: string
          note:
            type: object
            properties:
              noteId:
                type: string
              content: 
                type: string
            
  UpdateTransition: 
    type: object
    properties :
      transitionId:
        type: string
      category :
        type: string
        enum: 
          - "Food"
          - "Transportation"
          - "Healthcare"
          - "Entertainment"
          - "Other"
      
  DeleteTransitionResponse:
    type: object
    properties:
      status:
        type: boolean
        description: Indicates if the operation was successful.
      message:
        type: string
        description: A message providing details about the result of the deletion.
        example: "The note was succefully deleted"
  