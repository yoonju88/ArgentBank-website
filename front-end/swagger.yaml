swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /account/{accountId}:     
    get:  
      security : 
        - Bearer: [] 
      tags:
        - Transaction
      summary: Retrieve all transactions for the current month and grouped by account
      description: API to retrive transactions grouped by account for the current month.
      parameters :
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
        - in: path
          name: accountId
          description: The ID of the account
          required: true
          type: string
      produces:
        - application/json
      responses :
        '200':
          description: Transaction grouped by account for the current month
          schema:
            $ref: '#/definitions/ListOfTransactionsResponse'
        '400':
          description: Invalid field
          schema:
            $ref: '#/definitions/ListOfTransInvalidField'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorAuthorized'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorNotFound'
  /transactions/{transactionId}:
    get: 
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: View the details of a single transaction
      description: API for fetching the detail of transaction by its Id
      parameters :
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses :
        '200':
          description: Transaction detail retrieved successfully
          schema:
              $ref: '#/definitions/TransactionDetails'
        '400':
          description: Invalid field
          schema:
            $ref: '#/definitions/InvalidField'
        '401':
          description: Unauthorized
          schema:
              $ref: '#/definitions/ErrorAuthorized'
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/ErrorNotFound'
    put:
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: Update category on a transaction
      description: API for editing category on trasaction by its ID
      parameters :
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
          
        - in: body
          name: body
          description: Update the transaction payload
          required: true
          schema:
              $ref: '#/definitions/UpdateTransactionCategory'
      produces :
        - application/json
      responses :
        '200':
          description: Transaction category updated successfully
          schema:
            $ref: '#/definitions/UpdateTransCategoryResponse'
        '400':
          description: Invalid field
          schema:
            $ref: '#/definitions/InvalidField'
        '401':
          description: Unauthorized
          schema:
              $ref: '#/definitions/ErrorAuthorized'
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/ErrorNotFound'
  /transaction/{transactionId}/note :      
    post:
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: Add a new note to a transition
      description: API for adding a new note
      parameters :
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
          
        - in: body
          name: body
          description: add the transaction payload
          required: true
          schema: 
            $ref: '#/definitions/AddTransactionNote'
      produces:
        - application/json
      responses :
        '200':
          description: New note has been successfully added
          schema:
              $ref: '#/definitions/AddTransactaconNoteResponse'
        '400':
          description: Invalid fields
          schema:
              $ref: '#/definitions/InvalidField'
        '401':
          description: Unauthorized
          schema:
              $ref: '#/definitions/ErrorAuthorized'
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/ErrorNotFound'
  /transaction/{transactionId}/note/{noteId}:
    put:
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: Update note on a transaction
      description: API for editing note on trasaction by its ID
      parameters :
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
          
        - in: path
          name: noteId
          description: The ID of the transaction note to be deleted
          required: true
          type: string
          
        - in: body
          name: body
          description: Update the transaction payload
          required: true
          schema:
              $ref: '#/definitions/UpdateTransactionNote'
      produces :
        - application/json
      responses :
        '200':
          description: Transaction category updated successfully
          schema:
            $ref: '#/definitions/UpdateTransNoteResponse'
        '400':
          description: Invalid field
          schema:
            $ref: '#/definitions/InvalidFieldFor2Ids'
        '401':
          description: Unauthorized
          schema:
              $ref: '#/definitions/ErrorAuthorized'
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/ErrorNotFound'
    delete:
      security: 
        - Bearer: []
      tags:
        - Transaction
      summary: Delete information on a transaction
      description: API for removing information on transaction by its ID 
      parameters :
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: The ID of the transaction
          required: true
          type: string
        - in: path
          name: noteId
          description: The ID of the transaction note to be deleted
          required: true
          type: string
      produces :
        - application/json
      responses :
        '200':
          description: Transaction information deleted successfully
          schema:
              $ref: '#/definitions/DeleteTransitionResponse'
        '400':
          description: Invalid fields
          schema:
              $ref: '#/definitions/InvalidFieldFor2Ids'
        '401':
          description: Unauthorized
          schema:
              $ref: '#/definitions/ErrorAuthorized'
        '403':
          description: Forbidden
          schema:
              $ref: '#/definitions/ErrorForbidden'
        '404':
          description: Not Found
          schema:
              $ref: '#/definitions/ErrorNotFound'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    
definitions:
  ListOfTransactionsResponse:
    type: object
    properties:
      accountId:
        type: string
      transactions:
        type: array
        items:
          type: object
          properties:
            transactionId:
              type: string
            date:
              type: string
              format: date
            amount:
              type: number
              format: double
              example: 308.58
            balance:
              type: number
              format: double
              example: 1408.01
            description:
              type: string
  ListOfTransInvalidField: 
    type: object
    properties:
      errorCode:
        type: string
        example: "invalid field"
      errorMessage:
        type: string
        example: "the field 'accountId' is invalid"
  TransactionDetails:
    type: object
    properties:
      transactionId:
        type: string
      date:
        type: string
        format : date
      description:
        type: string
        description: transaction detail description ('Golden Sun Bakery')
      amount: 
        type: number
        format: double
        description: transaction amount in USD
        example: 85.78 
      balance:
        type: number
        format: double
        description: transaction balance in USD
        example: 1500.12 
      type: 
        type: string
        description: transaction type
      category:
        type: string
        example: Food
      note:
        type: object
        description: transaction note
        properties:
          noteId:
            type: string
          content: 
            type: string
  AddTransactionNote:
    type: object
    properties:
      note:
        type: object
        properties:
          content: 
            type: string
  AddTransactaconNoteResponse:
    type: object
    properties:
      status:
        type: string
        example: "success"
      message:  
        type: string
        example: "the note added successfully"
      noteId:
        type: integer
        example: 123
  UpdateTransCategoryResponse:
    type: object
    properties:
      status:
        type: string
        example: "success"
      message:  
        type: string
        example: "category modified successfully"
  UpdateTransNoteResponse:
    type: object
    properties:
      status:
        type: string
        example: "success"
      message:  
        type: string
        example: "note modified successfully"
  UpdateTransactionCategory: 
    type: object
    properties :
      category :
        type: string
        enum: 
          - "Food"
          - "Transportation"
          - "Healthcare"
          - "Entertainment"
          - "Other"
  UpdateTransactionNote :
    type: object
    properties :
      note:
        type: object
        properties:
          content: 
            type: string
  DeleteTransitionResponse:
    type: object
    properties:
      status:
        type: string
        example: "success"
      message:
        type: string
        description: A message providing details about the result of the deletion.
        example: "The note deleted succefully"
  InvalidFieldFor2Ids :
    type: object
    properties:
      status:
        type: string
        example: "invalid field"
      errorMessage:
        type: string
        example: "the field 'transactionId' or 'noteId' is invalid"
  InvalidField: 
    type: object
    properties:
      status:
        type: string
        example: "invalid field"
      errorMessage:
        type: string
        example: "the field 'transactionId' is invalid"
  ErrorForbidden:
    type: object
    properties:
      status:
        type: string
        example: "forbidden"
      message:  
        type: string
        example: "you do not have permission to perform this action"

  ErrorAuthorized:
    type: object
    properties:
      status:
        type: string
        example: "unauthorized"
      message:  
        type: string
        example: "access token is missing or invalid"
  ErrorNotFound : 
    type: object
    properties:
        status:
          type: string
          example: "not found"
        message:  
          type: string
          example: "the requested resource was not found"
  